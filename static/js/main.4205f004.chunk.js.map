{"version":3,"sources":["Components/Сells.jsx","Components/Field.jsx","Components/winnerLine/winnerLine.js","Components/Game.jsx","index.jsx"],"names":["Cells","data","shape","onClick","winnerShape","disabled","findCell","className","Field","squares","winnerColor","map","index","key","event","undefined","find","winnerElem","winnerLine","Game","useState","Array","fill","setSquares","setWinnerColor","count","setCount","result","setResult","winner","setWinner","setDisabled","xO","whoNext","includes","findWinner","calculateWinner","i","line","clearAfter","setTimeout","target","getAttribute","currentSquares","ReactDOM","render","document","getElementById"],"mappings":"gKAEaA,EAAQ,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAEjDC,EACO,IAATL,EAAa,WACJ,IAATA,EAAa,MACJ,IAATA,EAAa,YACJ,IAATA,EAAa,OACJ,IAATA,EAAa,QACJ,IAATA,EAAa,cACJ,IAATA,EAAa,SACJ,IAATA,EAAa,eAAiB,GAElC,OACI,oCACI,yBACIA,KAAMA,EACNM,UAAS,uBAAkBD,EAAlB,YAA8BJ,EAA9B,YAAuCE,EAAvC,YAAsDC,GAC/DF,QAASA,GAET,8BAAOD,MClBVM,EAAQ,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,QAASN,EAAkD,EAAlDA,QAASE,EAAyC,EAAzCA,SAAUD,EAA+B,EAA/BA,YAAaM,EAAkB,EAAlBA,YAC7D,OACI,oCACKD,EAAQE,KAAI,SAACT,EAAOU,GAAR,OACT,kBAAC,EAAD,CACIC,IAAKD,EACLX,KAAMW,EACNT,QAAS,SAACW,GAAD,OAAWX,EAAQW,IAC5BZ,MAAOA,EACPG,SAAUA,EACVD,YACKA,QAAwEW,IAAzDL,EAAYM,MAAK,SAAAC,GAAU,OAAIA,IAAeL,KAC1D,qBAAuB,UCftCM,EAAc,CACvB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,ICLEC,EAAO,WAAO,IAAD,EACQC,mBAASC,MAAM,GAAGC,KAAK,OAD/B,mBACfb,EADe,KACNc,EADM,OAEgBH,mBAASC,MAAM,GAAGC,KAAK,OAFvC,mBAEfZ,EAFe,KAEFc,EAFE,OAGIJ,mBAAS,GAHb,mBAGfK,EAHe,KAGRC,EAHQ,OAIMN,mBAAS,IAJf,mBAIfO,EAJe,KAIPC,EAJO,OAKMR,mBAAS,IALf,mBAKfS,EALe,KAKPC,EALO,OAMUV,qBANV,mBAMff,EANe,KAML0B,EANK,KAQhBC,EAAMP,EAAQ,IAAM,EAAK,IAAM,IAC/BQ,EAAWxB,EAAQyB,SAAS,OAAoB,KAAXL,EAA3B,uBAA4DG,GAAO,GAC7EG,EAAe1B,EAAQyB,SAAS,OAAoB,KAAXL,EAA0B,GAAT,OAe1DO,EAAkB,WACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIC,EAAOpB,EAAWmB,GAClB5B,EAAQ6B,EAAK,MAAQN,GAAMvB,EAAQ6B,EAAK,MAAQN,GAAMvB,EAAQ6B,EAAK,MAAQN,GAC3EJ,EAAU,WACVE,EAAUE,GACVR,EAAec,GACfP,EAAY,YACZQ,KACQ9B,EAAQyB,SAAS,QACzBH,EAAY,YACZQ,OAKNA,EAAa,WACfC,YAAW,WACPjB,EAAWF,MAAM,GAAGC,KAAK,OACzBI,EAAS,GACTK,EAAY,IACZD,EAAU,IACVF,EAAU,MACX,MAGP,OACI,oCACI,yBAAKrB,UAAU,SACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAWyB,GAAKC,GACtB,8BAAOE,EAAP,IAAoBR,EAApB,IAA6BE,IAEjC,kBAAC,EAAD,CACI1B,QA9CK,SAACW,GAClB,IAAMb,EAAOa,EAAM2B,OAAOC,aAAa,QACnCC,EAAiBlC,EACY,OAAzBkC,EAAe1C,KACf0C,EAAe1C,GAAQ+B,EACvBT,EAAWoB,GACXnB,EAAemB,GACfjB,EAASD,EAAQ,GACjBW,MAuCI3B,QAASA,EACTL,YAAayB,EACbnB,YAAaA,EACbL,SAAUA,OC/D9BuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4205f004.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Cells = ({ data, shape, onClick, winnerShape, disabled }) => {\r\n    \r\n    const findCell = \r\n        data === 0 ? \"top left\" : \"\" || \r\n        data === 1 ? \"top\" : \"\" || \r\n        data === 2 ? \"top right\" : \"\" ||\r\n        data === 3 ? \"left\" : \"\" ||\r\n        data === 5 ? \"right\" : \"\" ||\r\n        data === 6 ? \"left bottom\" : \"\" ||\r\n        data === 7 ? \"bottom\" : \"\" ||\r\n        data === 8 ? \"bottom right\" : \"\"\r\n        \r\n    return (\r\n        <>\r\n            <div \r\n                data={data}\r\n                className={`field__board ${findCell} ${shape} ${winnerShape} ${disabled}`} \r\n                onClick={onClick} \r\n            >\r\n                <span>{shape}</span>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport { Cells } from \"./Сells\";\r\n\r\nexport const Field = ({ squares, onClick, disabled, winnerShape, winnerColor }) => {\r\n    return(\r\n        <>\r\n            {squares.map((shape, index) => (\r\n                <Cells\r\n                    key={index} \r\n                    data={index} \r\n                    onClick={(event) => onClick(event)} \r\n                    shape={shape}\r\n                    disabled={disabled}\r\n                    winnerShape={\r\n                        (winnerShape && winnerColor.find(winnerElem => winnerElem === index) !== undefined) ?\r\n                            \"field__winnerColor\" : \"\"\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};","export const winnerLine = ([\r\n    [0, 1, 2],\r\n    [3, 4, 5],          // Горизонталь\r\n    [6, 7, 8],              \r\n\r\n    [0, 3, 6],\r\n    [1, 4, 7],          // Вертикаль\r\n    [2, 5, 8],\r\n\r\n    [0, 4, 8],          // Диагональ\r\n    [2, 4, 6]           \r\n]);","import React, { useState } from 'react';\nimport { Field } from './Field';\nimport { winnerLine } from './winnerLine/winnerLine';\n\n\nexport const Game = () => {\n    const [squares, setSquares] = useState(Array(9).fill(null));\n    const [winnerColor, setWinnerColor] = useState(Array(9).fill(null));\n    const [count, setCount] = useState(0);\n    const [result, setResult] = useState(\"\");\n    const [winner, setWinner] = useState(\"\");\n    const [disabled, setDisabled] = useState();\n    \n    const xO = (count % 2 === 0) ? \"X\" : \"O\";\n    const whoNext = (squares.includes(null) && winner === \"\") ? `Next Player: ${xO}` : \"\";\n    const findWinner = (!squares.includes(null) && winner === \"\") ? \"Draw\" : \"\";\n\n\n    const clickHandler = (event) => {\n        const data = event.target.getAttribute(\"data\");   // номер квадрата, по которому кликнули\n        let currentSquares = squares;\n            if (currentSquares[data] === null) {\n                currentSquares[data] = xO;\n                setSquares(currentSquares);\n                setWinnerColor(currentSquares);\n                setCount(count + 1);\n                calculateWinner();\n            }\n    }\n\n    const calculateWinner = () => {\n        for (let i = 0; i < 8; i++) {\n            let line = winnerLine[i];\n            if (squares[line[0]] === xO && squares[line[1]] === xO && squares[line[2]] === xO) {\n                setResult(\"Winner:\");\n                setWinner(xO);\n                setWinnerColor(line);\n                setDisabled(\"disabled\");\n                clearAfter();\n            } else if (!squares.includes(null)) {\n                setDisabled(\"disabled\");\n                clearAfter();\n            }\n        } \n    }\n\n    const clearAfter = () => {\n        setTimeout(() => {\n            setSquares(Array(9).fill(null));\n            setCount(0);\n            setDisabled(\"\");\n            setWinner(\"\");\n            setResult(\"\");\n        }, 800);\n    }\n\n    return (\n        <>\n            <div className='field'>\n                <div className='field__status'>\n                    <span className={xO}>{whoNext}</span>\n                    <span>{findWinner} {result} {winner}</span>\n                </div>\n                <Field \n                    onClick={clickHandler}\n                    squares={squares} \n                    winnerShape={winner}\n                    winnerColor={winnerColor}\n                    disabled={disabled}\n                />\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Game } from './Components/Game';\n\nReactDOM.render(<Game />,document.getElementById('root'));\n\n"],"sourceRoot":""}